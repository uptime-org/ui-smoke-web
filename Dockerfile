# ui-smoke-web - Smoke test web interface
# Generated by GX Genesis | Team: team2 | Tier: ui | Eco: gx-smoke

# Build stage
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files for better Docker layer caching
COPY package*.json ./
COPY yarn.lock* ./

# Install ALL dependencies (including devDependencies) for building
RUN npm install && npm cache clean --force

# Copy application code
COPY src ./src
COPY public ./public
COPY next.config.js ./
COPY tsconfig.json ./
COPY tailwind.config.js ./
COPY postcss.config.js ./
COPY next-env.d.ts ./

# Build the Next.js application
RUN npm run build

# Production stage
FROM node:18-alpine AS runner

# Labels for Galaxy platform
LABEL service.name="ui-smoke-web" \
      service.tier="ui" \
      service.workload="ui" \
      service.team="team2" \
      service.eco="gx-smoke" \
      galaxy.io/managed-by="galaxy"

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# Set working directory
WORKDIR /app

# Copy package files and install production dependencies only
COPY package*.json ./
RUN npm install --only=production && npm cache clean --force

# Copy built application from builder stage
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /app/public ./public

# Switch to non-root user
USER nextjs

# Expose port from tier configuration
EXPOSE 3000

# Galaxy health check with service metadata
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f -H "X-Service-Name: ui-smoke-web" -H "X-Service-Team: team2" -H "X-Service-Tier: ui" -H "X-Service-Eco: gx-smoke" -H "X-Galaxy-Managed: true" http://127.0.0.1:3000/health || exit 1

# Start the Galaxy UI service
CMD ["node", "server.js"]
