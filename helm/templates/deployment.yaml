apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "service.fullname" . }}
  namespace: {{ include "service.namespace" . }}
  labels:
    {{- include "service.labels" . | nindent 4 }}
    service.tier: {{TIER}}
    service.workload: {{TIER}}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "service.selectorLabels" . | nindent 8 }}
        service.tier: {{TIER}}
        service.workload: {{TIER}}
        {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "service.fullname" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.probes.liveness | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.probes.readiness | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: ENVIRONMENT
              value: {{ .Values.env | quote }}
            - name: APP_NAME
              value: {{ include "service.fullname" . }}
            - name: SERVICE_NAME
              value: {{SERVICE_NAME}}
            - name: SERVICE_TIER
              value: {{TIER}}
            - name: SERVICE_WORKLOAD
              value: {{TIER}}
            - name: DNS_DOMAINS
              value: "{{DNS_DOMAINS}}"
          {{- if or .Values.secrets.enabled .Values.dependencies }}
          envFrom:
            {{- if .Values.secrets.enabled }}
            # Load specific secrets as environment variables
            - secretRef:
                name: {{ include "service.fullname" . }}-secrets
            {{- end }}
            {{- if .Values.dependencies }}
            # Load service dependencies as environment variables
            - configMapRef:
                name: {{ include "service.fullname" . }}-deps
            {{- end }}
          {{- end }}
          {{- if .Values.secrets.enabled }}
          volumeMounts:
            - name: secrets
              mountPath: /app/secrets
              readOnly: true
          {{- end }}
      {{- if .Values.secrets.enabled }}
      volumes:
        - name: secrets
          secret:
            secretName: {{ include "service.fullname" . }}-secrets
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}